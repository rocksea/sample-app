{{- if .Values.abtesting.enabled }}
{{- $fullName := include "coupon-api.fullname" . -}}
apiVersion: argoproj.io/v1alpha1
kind: Experiment
metadata:
  name: {{ $fullName }}
spec:
  # Duration of the experiment, beginning from when all ReplicaSets became healthy (optional)
  # If omitted, will run indefinitely until terminated, or until all analyses which were marked
  # `requiredForCompletion` have completed.
  duration: 20m

  # Deadline in seconds in which a ReplicaSet should make progress towards becoming available.
  # If exceeded, the Experiment will fail.
  progressDeadlineSeconds: 100

  # List of pod template specs to run in the experiment as ReplicaSets
  templates:
  - name: abtest
    # Number of replicas to run (optional). If omitted, will run a single replica
    replicas: 1
    selector:
      matchLabels:
        {{- include "coupon-api.selectorLabels" . | nindent 8 }}
        version: abtest
    template:
      metadata:
        labels:
          {{- include "coupon-api.selectorLabels" . | nindent 10 }}
          version: abtest
      spec:
        containers:
        - name: abtest
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:green"
          imagePullPolicy: Always
          ports:
          - name: http
            containerPort: {{ .Values.image.port }}
            protocol: TCP
          readinessProbe:
              failureThreshold: 3
              successThreshold: 1
              httpGet:
                  path: /coupon/actuator/health/readiness
                  port: {{ .Values.image.port }}
                  scheme: HTTP
              initialDelaySeconds: 60
              periodSeconds: 5
          livenessProbe:
              failureThreshold: 3
              successThreshold: 1
              httpGet:
                  path: /coupon/actuator/health/liveness
                  port: {{ .Values.image.port }}
                  scheme: HTTP
              initialDelaySeconds: 60
              periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: SERVER_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ $fullName }}
                  key: serverPort
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ $fullName }}
                  key: dbHost
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ $fullName }}
                  key: dbPort
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ $fullName }}
                  key: dbName
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: dbUsername
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: dbPassword
            - name: DB_DDL_AUTO
              valueFrom:
                configMapKeyRef:
                  name: {{ $fullName }}
                  key: dbDdlauto
            - name: KAFKA_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ $fullName }}
                  key: kafkaHost
            - name: KAFKA_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ $fullName }}
                  key: kafkaPort
{{- end }}
